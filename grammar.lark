?start: node

%import common.WS
%ignore WS

node:
    | sequence   // and
    | fallback   // or
    | action     // action
    | condition  // condition
    | decorator  // decorator


string: /[a-zA-Z0-9_]+/
nodes: node ("::" node)*
args: string ("::" string)*
atomic: string | string "(" args ")"


sequence: "S" "(" nodes ")"                   // sequence of nodes
fallback: "F" "(" nodes ")"                   // fallback of nodes
decorator: "D" "(" string "::" node ")"       // decorator with a node
action: "A" "(" atomic ")"                    // action
condition: "C" "(" atomic ")"                 // condition