?start: node

%import common.WS
%ignore WS

node:
    | sequence   // and
    | fallback   // or
    | action     // action
    | condition  // condition
    | decorator  // decorator

string: /[a-z0-9_]+/
atomic: string+
nodes: node ("::" node | "|>" node)*

sequence: "S" "(" nodes ")"                   // sequence of nodes
fallback: "F" "(" nodes ")"                   // fallback of nodes
decorator: "D" "(" atomic "::" node ")"       // decorator with a node
action: "A" "(" atomic ")"                    // action
condition: "C" "(" atomic ")"                 // condition
